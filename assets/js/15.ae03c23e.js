(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{214:function(e,t,o){"use strict";o.r(t);var a=o(2),i=Object(a.a)({},function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"instructions-for-using-cclib-related-modules"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#instructions-for-using-cclib-related-modules","aria-hidden":"true"}},[e._v("#")]),e._v(" Instructions for Using CCLib-related Modules")]),e._v(" "),o("h2",{attrs:{id:"introduction"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),o("p",[e._v("A new way of creating the modules has been introduced, which allows the daemon, "),o("code",[e._v("komodod")]),e._v(", to be built containing a dynamic library named "),o("code",[e._v("libcc.so")]),e._v(" that contains any specified set of dynamic modules. Ex: rogue, musig, sudoku etc., And such a "),o("code",[e._v("komodod")]),e._v(" will be able to start an assetchain that has any of the specified modules enabled.")]),e._v(" "),o("div",{staticClass:"warning custom-block"},[o("ul",[o("li",[e._v("The creation of "),o("code",[e._v("libcc.so")]),e._v(" and build process is not yet final.")]),e._v(" "),o("li",[e._v("Currently "),o("code",[e._v("komodod")]),e._v(" containing a dynamic module is built and used to launch an asset chain that has the module enabled through the parameter "),o("router-link",{attrs:{to:"/basic-docs/installations/asset-chain-parameters.html#ac-cclib"}},[e._v("-ac_cclib.")])],1),e._v(" "),o("li",[e._v("Go through the pages for differnt dynamic modules to learn how to build and test them currently.")]),e._v(" "),o("li",[e._v("The specifics of this process may change in the futute")])])]),e._v(" "),o("h2",{attrs:{id:"creating-a-new-dynamic-module"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-new-dynamic-module","aria-hidden":"true"}},[e._v("#")]),e._v(" Creating a new Dynamic Module")]),e._v(" "),o("ul",[o("li",[e._v("Make a copy of "),o("a",{attrs:{href:"https://github.com/jl777/komodo/blob/jl777/src/cc/cclib.cpp",target:"_blank",rel:"noopener noreferrer"}},[e._v("cclib.cpp"),o("OutboundLink")],1)])]),e._v(" "),o("div",{staticClass:"tip custom-block"},[o("ul",[o("li",[e._v("Each module must be given an "),o("code",[e._v("EVAL code")]),e._v(" which also acts as an identifier to interact with the module when using calls from the "),o("router-link",{attrs:{to:"/basic-docs/komodo-api/cclib.html"}},[e._v("CClib")]),e._v(" section.")],1),e._v(" "),o("li",[e._v("The "),o("code",[e._v("EVAL code")]),e._v(" defined must be >= 16 and < 128")])])]),e._v(" "),o("ul",[o("li",[e._v("Edit the table that defines RPC calls to add any new ones that are required.")]),e._v(" "),o("li",[e._v("Add the RPC calls and the module to the directory "),o("a",{attrs:{href:"https://github.com/jl777/komodo/blob/jl777/src/cc/",target:"_blank",rel:"noopener noreferrer"}},[e._v("komodo/src/cc"),o("OutboundLink")],1)]),e._v(" "),o("li",[e._v("The file "),o("code",[e._v("libcc.so")]),e._v(" is currently statically linked so you need to relink "),o("code",[e._v("komodod")]),e._v(" as shown "),o("a",{attrs:{href:"https://github.com/jl777/komodo/blob/jl777/src/cc/makecclib",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),o("OutboundLink")],1)])]),e._v(" "),o("div",{staticClass:"tip custom-block"},[o("p",{staticClass:"custom-block-title"},[e._v("Notice")]),e._v(" "),o("p",[e._v("Work is being done to allow dynamic loading of "),o("code",[e._v("libcc.so")]),e._v(". Then it just needs to be in the same directory as "),o("code",[e._v("komodod")]),e._v(" and it will update the available dynamic modules to whatever is in the "),o("code",[e._v("libcc.so")])])]),e._v(" "),o("ul",[o("li",[e._v("Build the "),o("code",[e._v("libcc.so")]),e._v(" and put it in the directory "),o("a",{attrs:{href:"https://github.com/jl777/komodo/blob/jl777/src/",target:"_blank",rel:"noopener noreferrer"}},[e._v("komodo/src"),o("OutboundLink")],1),e._v(" and rebuild")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("komodod")]),e._v(" built so, has the newly created module in it.")]),e._v(" "),o("li",[e._v("To launch a chain that has this module enabled, include the parameter "),o("router-link",{attrs:{to:"/basic-docs/installations/asset-chain-parameters.html#ac-cclib"}},[e._v("-ac_cclib.")]),e._v(" with its value as the name of the dynamic library defined in the file: "),o("a",{attrs:{href:"https://github.com/jl777/komodo/blob/jl777/src/cc/cclib.cpp",target:"_blank",rel:"noopener noreferrer"}},[e._v("cclib.cpp"),o("OutboundLink")],1),e._v(" in the variable "),o("code",[e._v("MYCCLIBNAME")])],1)])])},[],!1,null,null,null);t.default=i.exports}}]);